//TODO
// Get data into json and then list
// Sort warranty
// print warranties
// check for added warranties daily and append to bottom of the list
// Overwrite warranties weekly incase extended warranty is purchased.


// The two variables contain our keys to get access to Dell Warranty and therefore in github will be let as blank. This key was simply purhcased from Dell
var clientId = "";
var clientSecret = ""; 


// This uses 0Auth, an authentication method which uses bearer tokens to create sessions if successfully from handshake.
// This will allow the program to only have to ask for access the first time of the session.
// It then retrieves the device information based on a device service tag

  function getDellWarranty(serviceTag) {

  var cache = CacheService.getDocumentCache();
  var bearerToken = cache.get("dell_access_token");

  // If the bearer token has not been previously set, request a new one
  if(!bearerToken) {
  
    //auth and get our token thing
    var options = {
      'method' : 'post',
      'payload' : {
        'client_id': clientId,
        'client_secret': clientSecret,
        'grant_type': 'client_credentials'
      }
    };
    var authenticationResponseHttp = UrlFetchApp.fetch("https://apigtwb2c.us.dell.com/auth/oauth/v2/token", options);
    var authenticationResponse = JSON.parse(authenticationResponseHttp);
  
    //store the access token (bearer token) in the cache for the duration that it is valid - a bit
    cache.put("dell_access_token", authenticationResponse.access_token, authenticationResponse.expires_in / 2);
    bearerToken = authenticationResponse.access_token;
  }
  
  // to use bearer token to retrieve warranty through the production endpoint url.
  var getOptions = {
    'method': 'get',
    'headers' : {
      'Authorization': 'Bearer ' + bearerToken,
    }
  };

  // This should really be done as a bulk request but due to limited timeframe just doing as a request by request basis. - FIX THIS? - Might not as doing bulk still need to loop anyways. Not sure.
  var jsondata = UrlFetchApp.fetch("https://apigtwb2c.us.dell.com/PROD/sbil/eapi/v5/asset-entitlements?servicetags=" + serviceTag, getOptions);
  var apiResponse = JSON.parse(jsondata);
  var warranties = apiResponse[0].entitlements; // list
  var warranty = {productDescription:apiResponse[0].productLineDescription, endDate:'1970-01-01T00:00:00', lobCategory:apiResponse[0].productLobDescription, shipDate:apiResponse[0].shipDate};
 
  // Checks for the latest warranty
  for(var index=0; index < warranties.length; ++index) {
    if(warranties[index].endDate >= warranty.endDate) {
        warranty.endDate = warranties[index].endDate;
    }
  }

  // If warranty doesn't exists. Changes value to state and also push list to array to be printed out
  var returnValue = [];
  if(warranty.endDate == '1970-01-01T00:00:00')
  { 
    warranty.endDate = 'Has never had Warranty'
    returnValue.push([warranty.productDescription], [warranty.lobCategory], [warranty.shipDate], [warranty.endDate]);
  }
  else
  { 
    returnValue.push([warranty.productDescription], [warranty.lobCategory], [warranty.shipDate], [warranty.endDate.substring(0,10)]);
  }

  return returnValue;
}
